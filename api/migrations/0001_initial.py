# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-07-10 23:48
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='C2DmRegDevices',
            fields=[
                ('c2dm_id', models.AutoField(primary_key=True, serialize=False)),
                ('c2dm_regid', models.CharField(max_length=250)),
                ('c2dm_active', models.IntegerField()),
                ('c2dm_date', models.DateTimeField()),
                ('c2dm_androidid', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'c2dm_reg_devices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Campaigns',
            fields=[
                ('camp_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('create_date', models.DateTimeField()),
                ('end_date', models.DateField()),
                ('latitude', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('longitude', models.DecimalField(decimal_places=65535, max_digits=65535)),
                ('network_type', models.CharField(max_length=10)),
                ('accuracy', models.IntegerField()),
                ('radius', models.IntegerField()),
                ('velocity', models.IntegerField()),
                ('dist_frequency', models.IntegerField()),
                ('name', models.CharField(blank=True, max_length=70, null=True)),
                ('active', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'campaigns',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Devices',
            fields=[
                ('android_id', models.CharField(max_length=16, primary_key=True, serialize=False)),
                ('device_id', models.CharField(max_length=16)),
                ('device_serial', models.CharField(max_length=16)),
                ('device_mac', models.TextField()),
                ('device_brand', models.CharField(blank=True, max_length=30, null=True)),
                ('device_model', models.CharField(blank=True, max_length=30, null=True)),
                ('device_product', models.CharField(blank=True, max_length=30, null=True)),
                ('device_build_id', models.CharField(blank=True, max_length=30, null=True)),
                ('os', models.CharField(blank=True, max_length=30, null=True)),
                ('os_version', models.CharField(blank=True, max_length=30, null=True)),
                ('os_id', models.CharField(blank=True, max_length=128, null=True)),
                ('subscriber_id', models.CharField(max_length=16)),
                ('uuid', models.UUIDField()),
            ],
            options={
                'db_table': 'devices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DevicesPerCampaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'devices_per_campaign',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Distancesinterpolatedvalues',
            fields=[
                ('div_id', models.AutoField(db_column='DIV_Id', primary_key=True, serialize=False)),
                ('div_mea_id', models.IntegerField(db_column='DIV_MEA_Id')),
                ('div_center_x', models.DecimalField(blank=True, db_column='DIV_Center_X', decimal_places=5, max_digits=10, null=True)),
                ('div_center_y', models.DecimalField(blank=True, db_column='DIV_Center_Y', decimal_places=5, max_digits=10, null=True)),
                ('div_geomcenter', models.BinaryField(blank=True, db_column='DIV_GeomCenter', null=True)),
                ('div_center_distance', models.FloatField(blank=True, db_column='DIV_Center_Distance', null=True)),
                ('div_point_distance', models.FloatField(blank=True, db_column='DIV_Point_Distance', null=True)),
                ('div_idw', models.FloatField(blank=True, db_column='DIV_IDW', null=True)),
            ],
            options={
                'db_table': 'DistancesInterpolatedValues',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Measurements',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('geomcol1', models.BinaryField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(blank=True, null=True)),
                ('lon', models.DecimalField(decimal_places=5, max_digits=10)),
                ('lat', models.DecimalField(decimal_places=5, max_digits=10)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('speed', models.FloatField(blank=True, null=True)),
                ('operatorname', models.CharField(blank=True, max_length=50, null=True)),
                ('mcc', models.CharField(blank=True, max_length=3, null=True)),
                ('mnc', models.CharField(blank=True, max_length=3, null=True)),
                ('node', models.CharField(blank=True, max_length=11, null=True)),
                ('cellid', models.CharField(blank=True, max_length=11, null=True)),
                ('lac', models.CharField(blank=True, max_length=11, null=True)),
                ('network_type', models.CharField(blank=True, max_length=2, null=True)),
                ('qual', models.IntegerField(blank=True, null=True)),
                ('snr', models.IntegerField(blank=True, null=True)),
                ('cqi', models.IntegerField(blank=True, null=True)),
                ('lterssi', models.IntegerField(blank=True, null=True)),
                ('appversioncode', models.IntegerField(blank=True, null=True)),
                ('psc', models.IntegerField(blank=True, null=True)),
                ('dl_bitrate', models.IntegerField(blank=True, null=True)),
                ('ul_bitrate', models.IntegerField(blank=True, null=True)),
                ('nlac1', models.IntegerField(blank=True, null=True)),
                ('ncellid1', models.IntegerField(blank=True, null=True)),
                ('nrxlev1', models.IntegerField(blank=True, null=True)),
                ('nlac2', models.IntegerField(blank=True, null=True)),
                ('ncellid2', models.IntegerField(blank=True, null=True)),
                ('nrxlev2', models.IntegerField(blank=True, null=True)),
                ('nlac3', models.IntegerField(blank=True, null=True)),
                ('ncellid3', models.IntegerField(blank=True, null=True)),
                ('nrxlev3', models.IntegerField(blank=True, null=True)),
                ('nlac4', models.IntegerField(blank=True, null=True)),
                ('ncellid4', models.IntegerField(blank=True, null=True)),
                ('nrxlev4', models.IntegerField(blank=True, null=True)),
                ('nlac5', models.IntegerField(blank=True, null=True)),
                ('ncellid5', models.IntegerField(blank=True, null=True)),
                ('nrxlev5', models.IntegerField(blank=True, null=True)),
                ('nlac6', models.IntegerField(blank=True, null=True)),
                ('ncellid6', models.IntegerField(blank=True, null=True)),
                ('nrxlev6', models.IntegerField(blank=True, null=True)),
                ('ctime', models.DateTimeField(blank=True, null=True)),
                ('event', models.CharField(blank=True, max_length=20, null=True)),
                ('accuracy', models.IntegerField(blank=True, null=True)),
                ('locationsource', models.CharField(blank=True, max_length=2, null=True)),
                ('altitude', models.IntegerField(blank=True, null=True)),
                ('conntype', models.CharField(blank=True, max_length=5, null=True)),
                ('conninfo', models.CharField(blank=True, max_length=25, null=True)),
                ('avgping', models.IntegerField(blank=True, null=True)),
                ('minping', models.IntegerField(blank=True, null=True)),
                ('maxping', models.IntegerField(blank=True, null=True)),
                ('stdevping', models.IntegerField(blank=True, null=True)),
                ('pingloss', models.IntegerField(blank=True, null=True)),
                ('testdlbitrate', models.IntegerField(blank=True, null=True)),
                ('testulbitrate', models.IntegerField(blank=True, null=True)),
                ('geomcol2', models.TextField(blank=True, null=True)),
                ('devicemanufacturer', models.CharField(blank=True, max_length=30, null=True)),
                ('devicemodel', models.CharField(blank=True, max_length=30, null=True)),
                ('devicename', models.CharField(blank=True, max_length=30, null=True)),
                ('versionname', models.CharField(blank=True, max_length=30, null=True)),
                ('brand', models.CharField(blank=True, max_length=30, null=True)),
                ('androidversion', models.CharField(blank=True, max_length=30, null=True)),
                ('servingcelltime', models.IntegerField(blank=True, null=True)),
                ('os', models.CharField(blank=True, max_length=30, null=True)),
                ('os_id', models.CharField(blank=True, max_length=128, null=True)),
                ('camp_id', models.IntegerField(blank=True, null=True)),
                ('ssid', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'Measurements',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Metric',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('unit', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'metric',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Originalfusion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lon', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('lat', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('geomcol1', models.BinaryField(blank=True, db_column='Geomcol1', null=True)),
                ('value', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'originalFusion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Roi',
            fields=[
                ('roi_id', models.AutoField(db_column='ROI_Id', primary_key=True, serialize=False)),
                ('roi_geomcenter', models.BinaryField(blank=True, db_column='ROI_GeomCenter', null=True)),
            ],
            options={
                'db_table': 'ROI',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpatialRefSys',
            fields=[
                ('srid', models.IntegerField(primary_key=True, serialize=False)),
                ('auth_name', models.CharField(blank=True, max_length=256, null=True)),
                ('auth_srid', models.IntegerField(blank=True, null=True)),
                ('srtext', models.CharField(blank=True, max_length=2048, null=True)),
                ('proj4text', models.CharField(blank=True, max_length=2048, null=True)),
            ],
            options={
                'db_table': 'spatial_ref_sys',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sysdiagrams',
            fields=[
                ('name', models.CharField(max_length=128)),
                ('principal_id', models.IntegerField()),
                ('diagram_id', models.AutoField(primary_key=True, serialize=False)),
                ('version', models.IntegerField(blank=True, null=True)),
                ('definition', models.BinaryField(blank=True, null=True)),
            ],
            options={
                'db_table': 'sysdiagrams',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Testavg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lon', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('lat', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('geomcol1', models.BinaryField(blank=True, db_column='Geomcol1', null=True)),
                ('value', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'TestAVG',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Testfusion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lon', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('lat', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('geomcol1', models.BinaryField(blank=True, db_column='Geomcol1', null=True)),
                ('value', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'TestFusion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Testidwsave',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lon', models.FloatField(blank=True, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('geomcol1', models.BinaryField(blank=True, db_column='Geomcol1', null=True)),
                ('value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'TestIDWsave',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Testidwsave1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lon', models.FloatField(blank=True, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('geomcol1', models.BinaryField(blank=True, db_column='Geomcol1', null=True)),
                ('value', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'TestIDWsave1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserRoles',
            fields=[
                ('role_id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('authority', models.CharField(max_length=10)),
                ('user_id', models.IntegerField()),
            ],
            options={
                'db_table': 'user_roles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('enabled', models.IntegerField(blank=True, null=True)),
                ('firstname', models.CharField(blank=True, max_length=255, null=True)),
                ('lastname', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('passwordformat', models.IntegerField(blank=True, null=True)),
                ('passwordsalt', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
    ]
